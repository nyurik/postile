name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - if: github.event_name != 'release' && github.event_name != 'workflow_dispatch'
        uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with: { tool: 'just,cargo-binstall,cargo-llvm-cov' }
      - uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: build-essential libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt-dev libssl-dev libxml2-utils xsltproc ccache pkg-config
          version: 1.0
      - run: just init
      - run: just ci-test
      - run: just ci-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/llvm-cov/codecov.info

#  build:
#    name: Build ${{ matrix.target }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - target: aarch64-apple-darwin
#            os: macOS-14
#          - target: x86_64-apple-darwin
#            os: macOS-12
#          - target: x86_64-pc-windows-msvc
#            os: windows-latest
#          - target: x86_64-unknown-linux-gnu
#            os: ubuntu-latest
#    steps:
#      - uses: taiki-e/install-action@v2
#        with:
#          tool: just
#      - uses: actions/checkout@v5
#      - if: github.event_name != 'release' && github.event_name != 'workflow_dispatch'
#        uses: Swatinem/rust-cache@v2

  # This job checks if any of the previous jobs failed or were canceled.
  # This approach also allows some jobs to be skipped if they are not needed.
  ci-passed:
    needs: [ test ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Result of the needed steps
        run: echo "${{ toJSON(needs) }}"
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1

#  # Release unpublished packages or create a PR with changes
#  release-plz:
#    needs: [ ci-passed ]
#    if: |
#      always()
#      && needs.ci-passed.result == 'success'
#      && github.event_name == 'push'
#      && github.ref == 'refs/heads/main'
#      && github.repository_owner == 'nyurik'
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#      pull-requests: write
#    concurrency:
#      group: release-plz-${{ github.ref }}
#      cancel-in-progress: false
#    steps:
#      - uses: actions/checkout@v5
#        with: { fetch-depth: 0 }
#      - uses: dtolnay/rust-toolchain@stable
#      - name: Publish to crates.io if crate's version is newer
#        uses: release-plz/action@v0.5
#        id: release
#        with: { command: release }
#        env:
#          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#      - name: If version is the same, create a PR proposing new version and changelog for the next release
#        uses: release-plz/action@v0.5
#        if: ${{ steps.release.outputs.releases_created == 'false' }}
#        with: { command: release-pr }
#        env:
#          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
