name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/install-action@v2
        with: { tool: just }
      - uses: actions/checkout@v4
      - name: extract metadata
        id: metadata
        run: echo "pgrx-version=$(cargo metadata --format-version 1 | jq -r '.packages | map(select(.name == "postile")) | first | .dependencies | map(select(.name == "pgrx")) | first | .req | ltrimstr("=")') >> $GITHUB_OUTPUT
      - name: Ensure this crate has not yet been published (on release)
        if: github.event_name == 'release'
        run: just check-if-published
      - uses: Swatinem/rust-cache@v2
        if: github.event_name != 'release' && github.event_name != 'workflow_dispatch'
      - run: sudo apt-get install -y build-essential libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt-dev libssl-dev libxml2-utils xsltproc ccache pkg-config
      - name: Install PGRX with the needed version
        run: cargo install cargo-pgrx --version ${{ steps.metadata.outputs.pgrx-version }} --locked --force
      - run: cargo pgrx init
      - run: just ci-test
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

#  build:
#    name: Build ${{ matrix.target }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - target: aarch64-apple-darwin
#            os: macOS-14
#          - target: x86_64-apple-darwin
#            os: macOS-12
#          - target: x86_64-pc-windows-msvc
#            os: windows-latest
#          - target: x86_64-unknown-linux-gnu
#            os: ubuntu-latest
#    steps:
#      - uses: taiki-e/install-action@v2
#        with:
#          tool: just
#      - uses: actions/checkout@v4
#      - uses: Swatinem/rust-cache@v2
#        if: github.event_name != 'release' && github.event_name != 'workflow_dispatch'
